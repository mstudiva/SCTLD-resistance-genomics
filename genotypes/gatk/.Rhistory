setwd("/Volumes/GoogleDrive/.shortcut-targets-by-id/19m3NwVglpL06Kgwkt5cwhXXyo9OB6b63/Projects/FDEP/FY24/C1FB43 Ofav resistance/3. Genotyping/Genotypes")
library('gridExtra')
library('ggplot2')
library('tidyverse')
#### Data import ####
snp_filtered <- read.csv('ofav_snp_filtered.table', header = T, na.strings=c("","NA"), sep = "\t")
setwd("/Volumes/GoogleDrive/.shortcut-targets-by-id/19m3NwVglpL06Kgwkt5cwhXXyo9OB6b63/Projects/FDEP/FY24/C1FB43 Ofav resistance/3. Genotyping/Genotypes")
library('gridExtra')
library('ggplot2')
library('tidyverse')
#### Data import ####
snp_filtered <- read.csv('ofav_snp_filtered.table', header = T, na.strings=c("","NA"), sep = "\t")
setwd("/Volumes/GoogleDrive/.shortcut-targets-by-id/19m3NwVglpL06Kgwkt5cwhXXyo9OB6b63/Projects/FDEP/FY24/C1FB43 Ofav resistance/3. Genotyping/Genotypes")
library('gridExtra')
library('ggplot2')
library('tidyverse')
#### Data import ####
snp_filtered <- read.csv('ofav_snp_filtered.table', header = T, na.strings=c("","NA"), sep = "\t")
indel_filtered <- read.csv('ofav_indel_filtered.table', header = T, na.strings=c("","NA"), sep = "\t")
VCF_filtered <- rbind(snp_filtered, indel_filtered)
VCF_filtered$Variant <- factor(c(rep("SNPs", dim(snp_filtered)[1]), rep("Indels", dim(indel_filtered)[1])))
VCF_filtered %>%
filter(FILTER == "PASS") -> VCF_passing
snps <- '#A9E2E4'
indels <- '#F4CCCA'
QD <- ggplot(VCF_filtered, aes(x=QD, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
FS <- ggplot(VCF_filtered, aes(x=FS, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60, 200), linewidth=1, colour = c(snps,indels)) + scale_x_continuous(trans='log10')
SOR <- ggplot(VCF_filtered, aes(x=SOR, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(3), linewidth=1, colour = c(snps))
MQ <- ggplot(VCF_filtered, aes(x=MQ, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=40, linewidth=1, colour = c(snps))
MQRankSum <- ggplot(VCF_filtered, aes(x=MQRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=-12.5, linewidth=1, colour = c(snps))
ReadPosRankSum <- ggplot(VCF_filtered, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels))
ReadPosRankSum
QD_filtered <- ggplot(VCF_passing, aes(x=QD, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
FS_filtered <- ggplot(VCF_passing, aes(x=FS, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60, 200), linewidth=1, colour = c(snps,indels)) + scale_x_continuous(trans='log10')
SOR_filtered <- ggplot(VCF_passing, aes(x=SOR, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(3), linewidth=1, colour = c(snps))
View(VCF_filtered)
QD <- ggplot(VCF_filtered, aes(x=QD, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
FS <- ggplot(VCF_filtered, aes(x=FS, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60, 200), linewidth=1, colour = c(snps,indels)) + scale_x_continuous(trans='log10')
SOR <- ggplot(VCF_filtered, aes(x=SOR, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(3), linewidth=1, colour = c(snps))
MQ <- ggplot(VCF_filtered, aes(x=MQ, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=40, linewidth=1, colour = c(snps))
MQRankSum <- ggplot(VCF_filtered, aes(x=MQRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=-12.5, linewidth=1, colour = c(snps))
ReadPosRankSum <- ggplot(VCF_filtered, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels))
QD_filtered <- ggplot(VCF_passing, aes(x=QD, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
FS_filtered <- ggplot(VCF_passing, aes(x=FS, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60, 200), linewidth=1, colour = c(snps,indels)) + scale_x_continuous(trans='log10')
SOR_filtered <- ggplot(VCF_passing, aes(x=SOR, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(3), linewidth=1, colour = c(snps))
MQ_filtered <- ggplot(VCF_passing, aes(x=MQ, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=40, linewidth=1, colour = c(snps))
MQRankSum_filtered <- ggplot(VCF_passing, aes(x=MQRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=-12.5, linewidth=1, colour = c(snps))
ReadPosRankSum_filtered <- ggplot(VCF_passing, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels))
ReadPosRankSum
ReadPosRankSum_filtered
ReadPosRankSum_xlim <- ggplot(VCF_filtered, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels)) + xlim(-5,5)
ReadPosRankSum_xlim
ReadPosRankSum_filtered_xlim <- ggplot(VCF_passing, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels)) + xlim(-5,5)
ReadPosRankSum_filtered_xlim
DP <- ggplot(VCF_filtered, aes(x=DP, fill=Variant)) + geom_density(alpha=0.3)
DP
DP <- ggplot(VCF_filtered, aes(x=DP, fill=Variant)) + geom_density(alpha=0.3) +
geom_vline(xintercept=c(10,6200))
DP
DP <- ggplot(VCF_filtered, aes(x=DP, fill=Variant)) + geom_density(alpha=0.3) +
# geom_vline(xintercept=c(10,6200))
xlim(0,10000)
DP
DP <- ggplot(VCF_filtered, aes(x=DP, fill=Variant)) + geom_density(alpha=0.3) +
# geom_vline(xintercept=c(10,6200))
xlim(0,5000)
DP
DP_filtered <- ggplot(VCF_passing, aes(x=DP, fill=Variant)) + geom_density(alpha=0.3) +
xlim(0,5000)
DP_filtered
snps <- '#A9E2E4'
indels <- '#F4CCCA'
# combined depth per variant across samples
DP <- ggplot(VCF_filtered, aes(x=DP, fill=Variant)) + geom_density(alpha=0.3) +
xlim(0,5000)
# variant confidence standardized by depth
QD <- ggplot(VCF_filtered, aes(x=QD, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
# Phred-scaled probability that there is strand bias at the site
FS <- ggplot(VCF_filtered, aes(x=FS, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60, 200), linewidth=1, colour = c(snps,indels)) + scale_x_continuous(trans='log10')
# sequencing bias in which one DNA strand is favored over the other
SOR <- ggplot(VCF_filtered, aes(x=SOR, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(3), linewidth=1, colour = c(snps))
# mapping quality of a variant
MQ <- ggplot(VCF_filtered, aes(x=MQ, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=40, linewidth=1, colour = c(snps))
# rank sum test for mapping qualities
MQRankSum <- ggplot(VCF_filtered, aes(x=MQRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=-12.5, linewidth=1, colour = c(snps))
# do all the reads support a SNP call tend to be near the end of a read?
ReadPosRankSum <- ggplot(VCF_filtered, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels))
# same as above, just with an x axis limit
ReadPosRankSum_xlim <- ggplot(VCF_filtered, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels)) + xlim(-5,5)
pdf("Ofav_variants.pdf", height=20, width=15)
theme_set(theme_gray(base_size = 18))
grid.arrange(DP, QD, FS, SOR, MQ, MQRankSum, ReadPosRankSum, ReadPosRankSum_xlim, nrow=4)
dev.off()
#### Filtered variants ####
DP_filtered <- ggplot(VCF_passing, aes(x=DP, fill=Variant)) + geom_density(alpha=0.3) +
xlim(0,5000)
QD_filtered <- ggplot(VCF_passing, aes(x=QD, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
FS_filtered <- ggplot(VCF_passing, aes(x=FS, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60, 200), linewidth=1, colour = c(snps,indels)) + scale_x_continuous(trans='log10')
SOR_filtered <- ggplot(VCF_passing, aes(x=SOR, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(3), linewidth=1, colour = c(snps))
MQ_filtered <- ggplot(VCF_passing, aes(x=MQ, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=40, linewidth=1, colour = c(snps))
MQRankSum_filtered <- ggplot(VCF_passing, aes(x=MQRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=-12.5, linewidth=1, colour = c(snps))
ReadPosRankSum_filtered <- ggplot(VCF_passing, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels))
ReadPosRankSum_filtered_xlim <- ggplot(VCF_passing, aes(x=ReadPosRankSum, fill=Variant)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8,-20), linewidth=1, colour = c(snps,indels)) + xlim(-5,5)
pdf("Ofav_variants_filtered.pdf", height=20, width=15)
theme_set(theme_gray(base_size = 18))
grid.arrange(DP_filtered, QD_filtered, FS_filtered, SOR_filtered, MQ_filtered, MQRankSum_filtered, ReadPosRankSum_filtered, ReadPosRankSum_filtered_xlim, nrow=4)
dev.off()
pdf("Ofav_variants_raw_vs_filtered.pdf", height=30, width=15)
theme_set(theme_gray(base_size = 18))
grid.arrange(QD, QD_filtered, FS, FS_filtered, SOR, SOR_filtered, MQ, MQ_filtered, MQRankSum, MQRankSum_filtered, ReadPosRankSum, ReadPosRankSum_filtered, nrow=6)
dev.off()
snp_filtered$Pass <- factor(snp_filtered$FILTER == "PASS")
DP_snp_passfail <- ggplot(snp_filtered, aes(x=DP, fill=Pass)) + geom_density(alpha=0.3) +
xlim(0,5000)
DP_snp_passfail
QD_snp_passfail <- ggplot(snp_filtered, aes(x=QD, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
QD_snp_passfail
FS_snp_passfail <- ggplot(snp_filtered, aes(x=FS, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60), linewidth=1, colour = c(snps)) + ylim(0,0.1)
FS_snp_passfail
FS_snp_passfail <- ggplot(snp_filtered, aes(x=FS, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(60), linewidth=1, colour = c(snps)) + scale_x_continuous(trans='log10')
FS_snp_passfail
SOR_snp_passfail <- ggplot(snp_filtered, aes(x=SOR, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(3), linewidth=1, colour = c(snps))
SOR_snp_passfail
MQ_snp_passfail <- ggplot(snp_filtered, aes(x=MQ, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=40, linewidth=1, colour = c(snps))
MQ_snp_passfail
MQRankSum_snp_passfail <- ggplot(snp_filtered, aes(x=MQRankSum, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=-12.5, linewidth=1, colour = c(snps))
ReadPosRankSum_snp_passfail <- ggplot(snp_filtered, aes(x=ReadPosRankSum, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8), linewidth=1, colour = c(snps))
ReadPosRankSum_snp_passfail
ReadPosRankSum_snp_passfail_xlim <- ggplot(snp_filtered, aes(x=ReadPosRankSum, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-8), linewidth=1, colour = c(snps)) + xlim(-5,5)
ReadPosRankSum_snp_passfail_xlim
pdf("Ofav_snp_passfail.pdf", height=20, width=15)
theme_set(theme_gray(base_size = 18))
grid.arrange(DP_snp_passfail, QD_snp_passfail, FS_snp_passfail, SOR_snp_passfail, MQ_snp_passfail, MQRankSum_snp_passfail, ReadPosRankSum_snp_passfail, ReadPosRankSum_snp_passfail_xlim, nrow=4)
dev.off()
indel_filtered$Pass <- factor(indel_filtered$FILTER == "PASS")
DP_indel_passfail <- ggplot(indel_filtered, aes(x=DP, fill=Pass)) + geom_density(alpha=0.3) +
xlim(0,5000)
DP_indel_passfail
QD_indel_passfail <- ggplot(indel_filtered, aes(x=QD, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
QD_indel_passfail
QD_indel_passfail <- ggplot(indel_filtered, aes(x=QD, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1) +ylim(0,0.1)
QD_indel_passfail
QD_indel_passfail+ylim <- ggplot(indel_filtered, aes(x=QD, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1) +ylim(0,0.05)
QD_indel_passfail_ylim <- ggplot(indel_filtered, aes(x=QD, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1) +ylim(0,0.05)
QD_indel_passfail_ylim
QD_indel_passfail <- ggplot(indel_filtered, aes(x=QD, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=2, linewidth=1)
QD_indel_passfail
FS_indel_passfail <- ggplot(indel_filtered, aes(x=FS, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(200), linewidth=1, colour = c(indels)) + scale_x_continuous(trans='log10')
FS_indel_passfail
SOR_indel_passfail <- ggplot(indel_filtered, aes(x=SOR, fill=Pass)) + geom_density(alpha=.3)
SOR_indel_passfail
MQ_indel_passfail <- ggplot(indel_filtered, aes(x=MQ, fill=Pass)) + geom_density(alpha=.3)
MQ_indel_passfail
MQRankSum_indel_passfail <- ggplot(indel_filtered, aes(x=MQRankSum, fill=Pass)) + geom_density(alpha=.3)
MQRankSum_indel_passfail
ReadPosRankSum_indel_passfail <- ggplot(indel_filtered, aes(x=ReadPosRankSum, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-20), linewidth=1, colour = c(indels))
ReadPosRankSum_indel_passfail
ReadPosRankSum_indel_passfail_xlim <- ggplot(indel_filtered, aes(x=ReadPosRankSum, fill=Pass)) + geom_density(alpha=.3) +
geom_vline(xintercept=c(-20), linewidth=1, colour = c(indels)) + xlim(-5,5)
ReadPosRankSum_indel_passfail_xlim
pdf("Ofav_indel_passfail.pdf", height=15, width=15)
theme_set(theme_gray(base_size = 18))
grid.arrange(DP_indel_passfail, QD_indel_passfail, QD_indel_passfail_ylim, FS_indel_passfail, ReadPosRankSum_indel_passfail, ReadPosRankSum_indel_passfail_xlim, nrow=3)
dev.off()
pdf("Ofav_indel_passfail.pdf", height=15, width=15)
theme_set(theme_gray(base_size = 18))
grid.arrange(DP_indel_passfail, FS_indel_passfail, QD_indel_passfail, QD_indel_passfail_ylim, ReadPosRankSum_indel_passfail, ReadPosRankSum_indel_passfail_xlim, nrow=3)
dev.off()
setwd("/Volumes/GoogleDrive/.shortcut-targets-by-id/19m3NwVglpL06Kgwkt5cwhXXyo9OB6b63/Projects/FDEP/FY24/C1FB43 Ofav resistance/3. Genotyping/Genotypes")
library('gridExtra')
library('ggplot2')
library('tidyverse')
#### Data import ####
snp_filtered <- read.csv('ofav_snp_filtered.table', header = T, na.strings=c("","NA"), sep = "\t")
indel_filtered <- read.csv('ofav_indel_filtered.table', header = T, na.strings=c("","NA"), sep = "\t")
VCF_filtered <- rbind(snp_filtered, indel_filtered)
VCF_filtered$Variant <- factor(c(rep("SNPs", dim(snp_filtered)[1]), rep("Indels", dim(indel_filtered)[1])))
VCF_filtered %>%
filter(FILTER == "PASS") -> VCF_passing
snp_filtered$Pass <- factor(snp_filtered$FILTER == "PASS")
indel_filtered$Pass <- factor(indel_filtered$FILTER == "PASS")
# SNPs
sum(na.omit(snp_passing$QD) < 2)
snp_filtered %>%
filter(FILTER == "PASS") -> snp_passing
indel_filtered %>%
filter(FILTER == "PASS") -> indel_passing
# SNPs
sum(na.omit(snp_passing$QD) < 2)
sum(na.omit(snp_passing$QUAL) < 30)
sum(na.omit(snp_passing$SOR) > 3)
sum(na.omit(snp_passing$FS) > 60)
sum(na.omit(snp_passing$MQ) < 40)
sum(na.omit(snp_passing$MQRankSum) < -12.5)
sum(na.omit(snp_passing$ReadPosRankSum) < -8)
# Indels
sum(na.omit(indel_passing$QD) < 2)
sum(na.omit(indel_passing$QUAL) < 30) # 0
sum(na.omit(indel_passing$FS) > 200)
sum(na.omit(indel_passing$ReadPosRankSum) < -20)
setwd("~/Documents/GitHub/SCTLD-resistance-genomics/genotypes/gatk")
if (!require("pacman")) install.packages("pacman")
pacman::p_load("dendextend", "ggdendro", "tidyverse")
